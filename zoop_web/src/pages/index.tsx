import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import Button from '@mui/material/Button';
import TextField from "@mui/material/TextField";
import Stack from "@mui/material/Stack";
import Checkbox from "@mui/material/Checkbox";
import {FormControlLabel, Typography} from "@mui/material";
import {useState} from "react";
import {pipe} from "fp-ts/function";
import {RoomJoin, validateRoomJoin} from "@/domain/roomJoin";
import * as E from "fp-ts/Either";
import {stringify as uuidStringify} from "uuid";
import {useRouter} from "next/router";

export default function Home() {
  const [errors, setErrors] = useState(new Map<string, string>());
  const flushErrors = () => setErrors(new Map())
  const [isMainPlayer, setIsMainPlayer] = useState(false);
  const onMainPlayerChange = (e: any) => flushErrors() || setIsMainPlayer(!isMainPlayer);
  const [player0, setPlayer0] = useState("");
  const onPlayer0Change = (e: any) => flushErrors() || setPlayer0(e.target.value);
  const [player1, setPlayer1] = useState("");
  const onPlayer1Change = (e: any) => flushErrors() || setPlayer1(e.target.value);
  const [roomId, setRoomId] = useState("");
  const onRoomChange = (e: any) => flushErrors() || setRoomId(e.target.value);
  const router = useRouter()

  const onSubmit = () => {
    pipe(
      validateRoomJoin(
        isMainPlayer,
        player0,
        player1,
        roomId,
        "player0",
        "player1",
        "roomId",
      ),
      E.match<Map<string, string>, RoomJoin>(
        (errors) => setErrors(errors),
        ({ room, isMainPlayer, player0, player1 }) =>
          router.push({
            pathname: '/room/[roomId]',
            query: {
              isMainPlayer,
              player0: uuidStringify(player0.value),
              player1: uuidStringify(player1.value),
              roomId: uuidStringify(room.value),
            }
          })
      )
    )
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Stack spacing={2} sx={{ width: "100%", maxWidth: "500px", marginTop: "5rem" }}>
          <Typography variant="h3">Join game</Typography>
          <FormControlLabel
            value={isMainPlayer} onChange={onMainPlayerChange}
            control={<Checkbox defaultChecked id="is-main-player" />} label="Is main player" />
          <TextField
            error={errors.has("roomId")}
            helperText={errors.get("roomId")}
            value={roomId} onChange={onRoomChange}
            required={true} id="roomId" label="Room ID" variant="outlined" />
          <TextField
            error={errors.has("player0")}
            helperText={errors.get("player0")}
            value={player0} onChange={onPlayer0Change}
            required={true} id="player0" label="Player #0 ID" variant="outlined" />
          <TextField
            error={errors.has("player1")}
            helperText={errors.get("player1")}
            value={player1} onChange={onPlayer1Change}
            required={true} id="player1" label="Player #1 ID" variant="outlined" />
          <Button onClick={onSubmit} variant="contained">Start</Button>
        </Stack>
      </main>
    </>
  )
}

